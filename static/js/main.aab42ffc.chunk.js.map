{"version":3,"sources":["cmps/AppHeader.jsx","pages/About.jsx","cmps/RobotPreview.jsx","cmps/RobotList.jsx","services/storageService.js","services/robotService.js","services/utilService.js","pages/RobotDetails.jsx","cmps/RobotFilter.jsx","pages/RobotApp.jsx","pages/RobotEdit.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AppHeader","withRouter","props","console","log","className","activeClassName","exact","to","About","path","component","RobotPreview","robot","deleteRobot","_id","src","alt","model","type","onClick","ev","stopPropagation","RobotList","robots","map","storageService","store","key","value","localStorage","JSON","stringify","load","defaultValue","parse","robotService","query","filterBy","robotsToReturn","gRobots","maxBatteryStatus","minBatteryStatus","Infinity","filter","toLowerCase","includes","batteryStatus","Promise","resolve","save","robotToSave","idx","findIndex","splice","length","text","possible","i","charAt","Math","floor","random","makeId","push","STORAGE_KEY","remove","id","gDefaultRobots","slice","getById","find","reject","getEmptyRobot","tryRobot","_loadRobots","RobotDetails","state","loadRobot","a","match","params","setState","goBack","history","this","prevProps","prevState","Component","RobotFilter","handleChange","target","field","onChangeFilter","htmlFor","onChange","RobotApp","loadRobots","robotId","RobotEdit","inputRef","createRef","errMsg","name","onSaveRobot","preventDefault","current","focus","ref","App","PrivateRoute","isAdmin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aab42ffc.chunk.js","sourcesContent":["import { NavLink, withRouter } from \"react-router-dom\";\n\nfunction _AppHeader(props) {\n  console.log(' AppHeader props: ', props);\n  \n\n  return (\n    <div className=\"app-header\">\n      <nav>\n        <NavLink activeClassName=\"active-nav\" exact to=\"/\" >Home</NavLink>\n        <NavLink activeClassName=\"active-nav\" to=\"/about\" >About</NavLink>\n      </nav>\n    </div>\n  )\n}\n\nexport const AppHeader = withRouter(_AppHeader)\n","import { NavLink, Route } from \"react-router-dom\"\n\nexport function About() {\n\n  const Vision = () => {\n    return (\n      <div>\n        <ul>\n          <li>Take Over The World with Robots</li>\n          <li>Take care The World with Robots</li>\n        </ul>\n      </div>\n    )\n  }\n\n  const Teams = () => {\n    return (\n      <div>\n        <ul>\n          <li>Moshe Ben moshe</li>\n          <li>Elhanan Ben Elhanan</li>\n          <li>Ben Moshe Ben</li>\n        </ul>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"about\">\n      <h1>About Robots</h1>\n      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas vitae recusandae accusamus nulla consectetur voluptas fugiat labore? Unde excepturi dolores ratione quae velit quam iste reprehenderit earum vitae quis. Optio?</p>\n      <nav>\n        <NavLink to=\"/about/vision\">Vision</NavLink>\n        <NavLink to=\"/about/teams\">Teams</NavLink>\n      </nav>\n      <section>\n        <Route path=\"/about/vision\" component={Vision} />\n        <Route path=\"/about/teams\" component={Teams} />\n      </section>\n    </div>\n  )\n}\n","import { Link } from \"react-router-dom\"\r\n\r\nexport function RobotPreview({ robot, deleteRobot }) {\r\n\r\n  function onDeleteRobot(ev) {\r\n    ev.stopPropagation()\r\n    deleteRobot(robot._id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"robot-preview\" >\r\n      <Link to={'/robot/' + robot._id}>\r\n        <img src={'https://robohash.org/' + robot._id} alt=\"\" />\r\n        <p>{robot.model}</p>\r\n        <p>{robot.type}</p>\r\n      </Link>\r\n      <section className=\"actions\">\r\n        <button onClick={onDeleteRobot}>Delete</button>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import { RobotPreview } from './RobotPreview';\r\n\r\nexport function RobotList({ robots, deleteRobot }) {\r\n  return (\r\n    <div className=\"robot-list specific-cards-grid\">\r\n      {robots.map(robot => (\r\n        <RobotPreview deleteRobot={deleteRobot} robot={robot} key={robot._id} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","\r\nfunction store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\nexport const storageService = {\r\n    store,\r\n    load\r\n}\r\n","import { storageService } from './storageService.js'\r\nimport { makeId } from './utilService.js'\r\n\r\nexport const robotService = {\r\n    query,\r\n    save,\r\n    remove,\r\n    getById,\r\n    getEmptyRobot,\r\n    tryRobot\r\n}\r\n\r\nconst STORAGE_KEY = 'robots'\r\n\r\nconst gDefaultRobots = [\r\n    { _id: 'r2', model: 'Salad-O-Matic', batteryStatus: 80, type: 'Cooking' },\r\n    { _id: 'r3', model: 'Dusty', batteryStatus: 100, type: 'Cleaning' },\r\n    { _id: 'r1', model: 'Dominique Sote', batteryStatus: 100, type: 'Pleasure' },\r\n    { _id: 'r4', model: 'DevTron', batteryStatus: 40, type: 'Office' }\r\n]\r\n\r\nvar gRobots = _loadRobots()\r\n\r\nfunction query(filterBy) {\r\n    let robotsToReturn = gRobots;\r\n    if (filterBy) {\r\n        var { type, maxBatteryStatus, minBatteryStatus, model } = filterBy\r\n        maxBatteryStatus = maxBatteryStatus || Infinity\r\n        minBatteryStatus = minBatteryStatus || 0\r\n        robotsToReturn = gRobots.filter(robot => robot.type.toLowerCase().includes(type.toLowerCase()) && robot.model.toLowerCase().includes(model.toLowerCase())\r\n            && (robot.batteryStatus < maxBatteryStatus)\r\n            && robot.batteryStatus > minBatteryStatus)\r\n    }\r\n    return Promise.resolve([...robotsToReturn]);\r\n}\r\nfunction tryRobot(id) {\r\n    const robot = gRobots.find(robot => robot._id === id)\r\n    robot.batteryStatus -= 10\r\n    return Promise.resolve()\r\n}\r\nfunction getById(id) {\r\n    const robot = gRobots.find(robot => robot._id === id)\r\n    if (!robot) return Promise.reject()\r\n    return Promise.resolve({ ...robot })\r\n}\r\n\r\nfunction remove(id) {\r\n    const idx = gRobots.findIndex(robot => robot._id === id)\r\n    gRobots.splice(idx, 1)\r\n    if (!gRobots.length) gRobots = gDefaultRobots.slice()\r\n    storageService.store(STORAGE_KEY, gRobots)\r\n    return Promise.resolve()\r\n}\r\n\r\nfunction save(robotToSave) {\r\n    if (robotToSave._id) {\r\n        const idx = gRobots.findIndex(robot => robot._id === robotToSave._id)\r\n        gRobots.splice(idx, 1, robotToSave)\r\n    } else {\r\n        robotToSave._id = makeId()\r\n        gRobots.push(robotToSave)\r\n    }\r\n    storageService.store(STORAGE_KEY, gRobots)\r\n    return Promise.resolve(robotToSave);\r\n}\r\n\r\nfunction getEmptyRobot() {\r\n    return {\r\n        model: '',\r\n        type: '',\r\n        batteryStatus: 100\r\n    }\r\n}\r\n\r\nfunction _loadRobots() {\r\n    let robots = storageService.load(STORAGE_KEY)\r\n    if (!robots || !robots.length) robots = gDefaultRobots\r\n    storageService.store(STORAGE_KEY, robots)\r\n    return robots\r\n}\r\n\r\n","\r\nexport function makeId(length = 5) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n","import { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { robotService } from '../services/robotService'\r\n\r\nexport class RobotDetails extends Component {\r\n  state = {\r\n    robot: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadRobot()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.loadRobot()\r\n    }\r\n  }\r\n\r\n\r\n  loadRobot = async () => {\r\n    const { id } = this.props.match.params\r\n    const robot = await robotService.getById(id)\r\n    this.setState({ robot })\r\n  }\r\n\r\n  goBack = () => {\r\n    this.props.history.push('/')\r\n    // this.props.history.goBack()\r\n  }\r\n\r\n  render() {\r\n    const { robot } = this.state\r\n    if (!robot) return <div>Loading...</div>\r\n    return (\r\n      <div className=\"robot-details text-center\">\r\n        <img src={'https://robohash.org/' + robot._id} alt=\"\" />\r\n        <p>{robot.model}</p>\r\n        <p>{robot.type}</p>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequatur debitis dolores autem sequi aliquid. Iusto, nulla ea suscipit iste modi sequi possimus, consequuntur blanditiis ut magnam veritatis reprehenderit iure quaerat?</p>\r\n        <section className=\"actions\">\r\n          <button onClick={this.goBack}>Back</button>\r\n          <Link to={'/robot/edit/' + robot._id}>Edit</Link>\r\n          <Link to=\"/robot/r1\">Next robot</Link>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\r\n\r\nexport class RobotFilter extends Component {\r\n\r\n  state = {\r\n    type: '',\r\n    model: '',\r\n    minBatteryStatus: '',\r\n    maxBatteryStatus: ''\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    var field = target.id\r\n    var value = target.type === 'number' ? +target.value : target.value\r\n    this.setState({ [field]: value }, () => {\r\n      this.props.onChangeFilter(this.state)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"simple-form robot-filter\">\r\n        <label htmlFor=\"model\">Model\r\n        <input type=\"text\" id=\"model\" onChange={this.handleChange} />\r\n        </label>\r\n\r\n        <label htmlFor=\"type\">Type\r\n        <input type=\"text\" id=\"type\" onChange={this.handleChange} />\r\n        </label>\r\n\r\n        <label htmlFor=\"maxBatteryStatus\">Max Battery\r\n        <input type=\"number\" id=\"maxBatteryStatus\" onChange={this.handleChange} />\r\n        </label>\r\n\r\n        <label htmlFor=\"minBatteryStatus\">Min Battery\r\n        <input type=\"number\" id=\"minBatteryStatus\" onChange={this.handleChange} />\r\n        </label>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { RobotList } from '../cmps/RobotList'\r\nimport { RobotDetails } from './RobotDetails'\r\nimport { robotService } from '../services/robotService'\r\nimport { RobotFilter } from '../cmps/RobotFilter'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class RobotApp extends Component {\r\n  state = {\r\n    robots: null,\r\n    filterBy: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadRobots()\r\n\r\n\r\n  }\r\n\r\n  async loadRobots() {\r\n    const robots = await robotService.query(this.state.filterBy)\r\n    this.setState({ robots })\r\n  }\r\n\r\n\r\n  onChangeFilter = (filterBy) => {\r\n    this.setState({ filterBy }, this.loadRobots)\r\n  }\r\n\r\ndeleteRobot = async (robotId) => {\r\n    await robotService.remove(robotId)\r\n    this.loadRobots()\r\n  }\r\n\r\n  render() {\r\n    const { robots } = this.state\r\n    if (!robots) return <div className=\"page-loading-screen\">Loading...</div>\r\n\r\n    return (\r\n      <div className=\"robot-app\">\r\n        <h1>Robot Shop</h1>\r\n        <RobotFilter onChangeFilter={this.onChangeFilter} />\r\n        <RobotList robots={robots} deleteRobot={this.deleteRobot} />\r\n        <Link to=\"robot/edit\">Add Robot</Link>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Component, createRef } from 'react'\nimport { robotService } from '../services/robotService'\n\nexport class RobotEdit extends Component {\n\n  inputRef = createRef()\n\n  state = {\n    robot: null,\n    errMsg: ''\n  }\n\n  async componentDidMount() {\n\n    try {\n      const id = this.props.match.params.id\n      const robot = id ? await robotService.getById(id) : robotService.getEmptyRobot()\n      this.setState({ robot }, () => this.inputRef.current.focus())\n    } catch (err) {\n      this.setState({ errMsg: 'Cannot Find Robot' })\n    }\n\n  }\n\n  handleChange = ({ target }) => {\n    const field = target.name\n    const value = target.type === \"number\" ? +target.value : target.value\n    this.setState(prevState => ({ robot: { ...prevState.robot, [field]: value } }))\n  }\n\n  onSaveRobot = async (ev) => {\n    ev.preventDefault()\n    const { robot } = this.state\n    await robotService.save(robot)\n    this.props.history.push('/')\n  }\n\n\n\n  render() {\n    if (!this.state.robot) return <div>{this.state.errMsg || 'Lodaing...'}</div>\n    const { model, type, batteryStatus } = this.state.robot\n    return (\n      <form className=\"robot-edit\">\n        <label htmlFor=\"model\">Model</label>\n        <input ref={this.inputRef} value={model} name=\"model\" type=\"text\" id=\"model\" onChange={this.handleChange} />\n\n        <label htmlFor=\"type\">Type</label>\n        <input value={type} name=\"type\" type=\"text\" id=\"type\" onChange={this.handleChange} />\n\n        <label htmlFor=\"batteryStatus\">Max Battery</label>\n        <input value={batteryStatus} name=\"batteryStatus\" type=\"number\" id=\"batteryStatus\" onChange={this.handleChange} />\n\n        <button onClick={this.onSaveRobot}>Save</button>\n\n        <p>{this.state.errMsg}</p>\n      </form>\n    )\n  }\n}\n","import { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport { AppHeader } from './cmps/AppHeader';\nimport { About } from './pages/About';\nimport { RobotApp } from './pages/RobotApp';\nimport { RobotDetails } from './pages/RobotDetails';\nimport { RobotEdit } from './pages/RobotEdit';\n\nexport function App() {\n\n  const PrivateRoute = (props) => {\n    // return props.isAdmin ? <Route {...props} /> : <Redirect to=\"/\" />\n    return props.isAdmin ? <Route path={props.path} component={props.component} /> : <Redirect to=\"/\" />\n  }\n\n  return (\n    <Router>\n      <main>\n        <AppHeader />\n        <Switch>\n          <Route path=\"/robot/edit/:id?\" component={RobotEdit} />\n          <Route path=\"/robot/:id\" component={RobotDetails} />\n          <PrivateRoute path=\"/about\" component={About} isAdmin={true} />\n          <Route path=\"/\" component={RobotApp} />\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/global.scss'\nimport { App } from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}